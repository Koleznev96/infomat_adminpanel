{"version":3,"file":"static/js/580.4a1dedea.chunk.js","mappings":"yPAGaA,EAAsB,SAACC,GAAD,OAAuBA,EAAMC,EAAAA,EAAAA,YAA7B,ECCtBC,GAAwBC,EAAAA,EAAAA,GAAe,CAACJ,IAAsB,SAACC,GAAD,OAA8BA,EAAMI,IAApC,ICA9DC,GAA6BF,EAAAA,EAAAA,GACzC,CAACJ,IACD,SAACC,GAAD,OAA8BA,EAAMM,SAApC,ICFYC,GAAyBJ,EAAAA,EAAAA,GAAe,CAACJ,IAAsB,SAACC,GAAD,OAA8BA,EAAMQ,KAApC,I,2ECH5E,EAA+B,yCC4G/B,EAhG2B,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,SAAUL,EAAoC,EAApCA,KACtC,GAA4BM,EAAAA,EAAAA,WAAa,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMO,mBAAoB,IAA/D,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BH,EAAAA,EAAAA,WAAa,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMU,QAAS,IAAtD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCN,EAAAA,EAAAA,WAAa,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMa,UAAW,IAA1D,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BT,EAAAA,EAAAA,WAAuB,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,SAAU,IAA/D,eAAOA,EAAP,KAAeC,EAAf,KACA,GAAsDX,EAAAA,EAAAA,UAAmB,IAAzE,eAAOY,EAAP,KAA4BC,EAA5B,KAEMC,GAAkBZ,EAAOa,SAAWV,EAAQU,SAAWP,EAASO,OAEhEC,GAASC,EAAAA,EAAAA,cAAY,WAC1BlB,EAAS,CACRE,iBAAkBC,EAClBE,MAAOC,EACPE,QAASC,EACTE,OAAQA,EACRE,oBAAqBA,GAEtB,GAAE,CAACV,EAAQG,EAASG,EAAUE,EAAQE,EAAqBb,IAEtDmB,GAAWD,EAAAA,EAAAA,cAChB,SAACE,EAAeC,GAAuB,IAAD,EAC/BC,EAAE,UAAGX,EAAOS,UAAV,aAAG,EAAeE,GAC1B,GAAa,OAATD,IAAkBE,IAAAA,YAAcD,GAAK,CACxC,IAAME,GAAsB,OAAOX,GACnCW,EAAuBC,KAAKH,GAC5BR,EAAuBU,EACvB,CACD,IAAME,GAAS,OAAOf,GACtB,GAAIY,IAAAA,YAAcG,EAAUN,IAC3B,GACCM,EAAUD,KAAK,CAACE,IAAK,aACbJ,IAAAA,YAAcG,EAAUN,KAElCM,EAAUN,GAAS,CAACO,IAAKN,GACzBT,EAAUc,EACV,GACD,CAACd,EAAWD,EAAQE,EAAqBC,IAG1C,OACC,gBAACc,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,GACxB,gBAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACtB,gBAACC,EAAA,EAAD,CACCC,MAAO,sJACPC,QAAQ,WACRC,WAAS,EACTC,SAAU,EACVC,SAAU,SAACC,GAAD,OAAOpC,EAAUoC,EAAEC,OAAOC,MAA1B,EACVA,MAAOvC,EACPwC,KAAM,EACNC,YAAY,2CAGd,gBAAChB,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACtB,gBAACC,EAAA,EAAD,CACCC,MAAO,gJACPC,QAAQ,WACRE,SAAU,EACVC,SAAU,SAACC,GAAD,OAAOjC,EAAWiC,EAAEC,OAAOC,MAA3B,EACVA,MAAOpC,EACPsC,YAAY,yDACZC,UAAWC,IAEZ,gBAACZ,EAAA,EAAD,CACCC,MAAO,kKACPC,QAAQ,WACRE,SAAU,EACVC,SAAU,SAACC,GAAD,OAAO9B,EAAY8B,EAAEC,OAAOC,MAA5B,EACVA,MAAOjC,EACPmC,YAAY,WAGd,gBAAChB,EAAA,GAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,GAAI,GAAIC,GAAI,IAChC,gBAACc,EAAA,EAAD,CACCC,WAAY,EACZC,gBAAc,EACd9B,SAAUA,EACV+B,MAAOvC,EACPwB,MAAM,iIAGR,gBAACP,EAAA,GAAD,CAAMG,MAAI,GACT,gBAACoB,EAAA,EAAD,CAAmBC,QAASnC,EAAQoC,SAAUtC,EAAgBuB,SAAU,GAAG,2DAM9E,EC3ED,EAboC,WACnC,IAAM3C,GAAO2D,EAAAA,EAAAA,GAAiB7D,GACxBI,GAAYyD,EAAAA,EAAAA,GAAiB1D,GAC7BG,GAAQuD,EAAAA,EAAAA,GAAiBxD,GACzBE,GAAWuD,EAAAA,EAAAA,GAAoBC,EAAAA,EAAAA,eAErC,OACC,gBAACC,EAAA,EAAD,CAAM5D,UAAWA,IAAa6D,EAAAA,EAAAA,aAAY/D,IACzC,gBAAC,EAAD,CAAoBA,KAAMA,EAAMI,MAAOA,EAAOC,SAAUA,IAG1D,EChBD,EAJ+B,WAC9B,OAAO,gBAAC,EAAD,KACP,C","sources":["../../core/src/Redux/Information/Selectors/getInformationState.ts","../../core/src/Redux/Information/Selectors/selectInformationData.ts","../../core/src/Redux/Information/Selectors/selectInformationIsLoading.ts","../../core/src/Redux/Information/Selectors/selectErrorInformation.ts","webpack://@infomat/web/./src/Components/GeneralInformation/GeneralInformation.module.scss?29f0","Components/GeneralInformation/GeneralInformation.tsx","Components/GeneralInformation/GeneralInformationContainer.tsx","Routes/Pages/Desktop/GeneralInformationPage/GeneralInformationPage.tsx"],"sourcesContent":["import IRootState from '@infomat/core/src/Redux/IRootState';\r\nimport EnumStore from '@infomat/core/src/BusinessLogic/EnumStore';\r\n\r\nexport const getInformationState = (state: IRootState) => state[EnumStore.INFORMATION];\r\n","import {createSelector} from '@infomat/core/src/Utils/Redux/createSelector';\r\nimport {TInformationSlice} from '@infomat/core/src/Redux/Information/slice';\r\nimport {getInformationState} from '@infomat/core/src/Redux/Information/Selectors/getInformationState';\r\n\r\nexport const selectInformationData = createSelector([getInformationState], (state: TInformationSlice) => state.data);\r\n","import {createSelector} from '@infomat/core/src/Utils/Redux/createSelector';\r\nimport {TInformationSlice} from '@infomat/core/src/Redux/Information/slice';\r\nimport {getInformationState} from '@infomat/core/src/Redux/Information/Selectors/getInformationState';\r\n\r\nexport const selectInformationIsLoading = createSelector(\r\n\t[getInformationState],\r\n\t(state: TInformationSlice) => state.isLoading,\r\n);\r\n","import {createSelector} from '@infomat/core/src/Utils/Redux/createSelector';\r\nimport {TInformationSlice} from '@infomat/core/src/Redux/Information/slice';\r\nimport {getInformationState} from '@infomat/core/src/Redux/Information/Selectors/getInformationState';\r\n\r\nexport const selectErrorInformation = createSelector([getInformationState], (state: TInformationSlice) => state.error);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"marginBottom\":\"GeneralInformation_marginBottom__0OGQ7\"};","import React, {useCallback, useState} from 'react';\r\nimport {Grid} from '@mui/material';\r\nimport _ from 'lodash';\r\n\r\nimport {TFile, TVideo} from '@infomat/core/src/Types/media';\r\nimport PropertyHandler from '@infomat/core/src/Types/PropertyHandler';\r\nimport ButtonWithTooltip from '@infomat/uikit/src/Button/ButtonWithTooltip';\r\nimport TextField from '@infomat/uikit/src/Fields/TextField/TextField';\r\nimport {TInformationVM} from '@infomat/core/src/Redux/Information/type';\r\nimport FileFiledWithPreview from '@infomat/uikit/src/Fields/FileFiledWithPreview/FileFiledWithPreview';\r\n\r\nimport style from './GeneralInformation.module.scss';\r\n\r\nconst GeneralInformation = ({onSubmit, data}: TGeneralInformationProps) => {\r\n\tconst [yandex, setYandex] = useState(data?.yandexMetricCode || '');\r\n\tconst [labelRu, setLabelRu] = useState(data?.title || '');\r\n\tconst [labelEng, setLabelEng] = useState(data?.titleEn || '');\r\n\tconst [videos, setVideos] = useState<TVideo[]>(data?.videos || []);\r\n\tconst [videoIdsForRemoving, setVideoIdsForRemoving] = useState<number[]>([]);\r\n\r\n\tconst isDisabledSave = !yandex.length || !labelRu.length || !labelEng.length;\r\n\r\n\tconst onSave = useCallback(() => {\r\n\t\tonSubmit({\r\n\t\t\tyandexMetricCode: yandex,\r\n\t\t\ttitle: labelRu,\r\n\t\t\ttitleEn: labelEng,\r\n\t\t\tvideos: videos,\r\n\t\t\tvideoIdsForRemoving: videoIdsForRemoving,\r\n\t\t});\r\n\t}, [yandex, labelRu, labelEng, videos, videoIdsForRemoving, onSubmit]);\r\n\r\n\tconst onAttach = useCallback(\r\n\t\t(index: number, file: File | null) => {\r\n\t\t\tconst id = videos[index]?.id;\r\n\t\t\tif (file === null && !_.isUndefined(id)) {\r\n\t\t\t\tconst videoIdsForRemovingNew = [...videoIdsForRemoving];\r\n\t\t\t\tvideoIdsForRemovingNew.push(id);\r\n\t\t\t\tsetVideoIdsForRemoving(videoIdsForRemovingNew);\r\n\t\t\t}\r\n\t\t\tconst videosNew = [...videos];\r\n\t\t\tif (_.isUndefined(videosNew[index])) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvideosNew.push({url: null});\r\n\t\t\t\t} while (_.isUndefined(videosNew[index]));\r\n\t\t\t}\r\n\t\t\tvideosNew[index] = {url: file};\r\n\t\t\tsetVideos(videosNew);\r\n\t\t},\r\n\t\t[setVideos, videos, videoIdsForRemoving, setVideoIdsForRemoving],\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={3}>\r\n\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel={'Код счетчика Яндекс.Метрики'}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\ttabIndex={1}\r\n\t\t\t\t\tonChange={(e) => setYandex(e.target.value)}\r\n\t\t\t\t\tvalue={yandex}\r\n\t\t\t\t\trows={8}\r\n\t\t\t\t\tplaceholder=\"<!-- Yandex.Metrika counter -->\"\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel={'Заголовок на русском языке'}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\ttabIndex={2}\r\n\t\t\t\t\tonChange={(e) => setLabelRu(e.target.value)}\r\n\t\t\t\t\tvalue={labelRu}\r\n\t\t\t\t\tplaceholder=\"Заголовок\"\r\n\t\t\t\t\tclassName={style.marginBottom}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel={'Заголовок на английском языке'}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\ttabIndex={3}\r\n\t\t\t\t\tonChange={(e) => setLabelEng(e.target.value)}\r\n\t\t\t\t\tvalue={labelEng}\r\n\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item container xs={12} md={12}>\r\n\t\t\t\t<FileFiledWithPreview\r\n\t\t\t\t\ttotalFiles={7}\r\n\t\t\t\t\tisVideoAllowed\r\n\t\t\t\t\tonAttach={onAttach}\r\n\t\t\t\t\tfiles={videos}\r\n\t\t\t\t\tlabel=\"Видео на главном экране\"\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<ButtonWithTooltip onClick={onSave} disabled={isDisabledSave} tabIndex={4}>\r\n\t\t\t\t\tСохранить\r\n\t\t\t\t</ButtonWithTooltip>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\ntype TGeneralInformationProps = {\r\n\tdata?: TInformationVM;\r\n\tonSubmit: PropertyHandler<TInformationVM & {videoIdsForRemoving?: number[]}>;\r\n\terror?: string;\r\n};\r\n\r\nexport default GeneralInformation;\r\n","import React from 'react';\r\nimport {isUndefined} from 'lodash';\r\n\r\nimport useActionDispatcher from '@infomat/core/src/Hooks/useActionDispatcher';\r\nimport {informationClientToServerActions} from '@infomat/core/src/Redux/Information/Actions/informationClientToServerActions';\r\nimport {useStoreSelector} from '@infomat/core/src/Hooks/useStoreSelector';\r\nimport {selectInformationData} from '@infomat/core/src/Redux/Information/Selectors/selectInformationData';\r\nimport {selectInformationIsLoading} from '@infomat/core/src/Redux/Information/Selectors/selectInformationIsLoading';\r\nimport {selectErrorInformation} from '@infomat/core/src/Redux/Information/Selectors/selectErrorInformation';\r\nimport Page from '@infomat/uikit/src/Page/Page';\r\n\r\nimport GeneralInformation from './GeneralInformation';\r\n\r\nconst GeneralInformationContainer = () => {\r\n\tconst data = useStoreSelector(selectInformationData);\r\n\tconst isLoading = useStoreSelector(selectInformationIsLoading);\r\n\tconst error = useStoreSelector(selectErrorInformation);\r\n\tconst onSubmit = useActionDispatcher(informationClientToServerActions.updateDetails);\r\n\r\n\treturn (\r\n\t\t<Page isLoading={isLoading || isUndefined(data)}>\r\n\t\t\t<GeneralInformation data={data} error={error} onSubmit={onSubmit} />\r\n\t\t</Page>\r\n\t);\r\n};\r\n\r\nexport default GeneralInformationContainer;\r\n","import React from 'react';\r\n\r\nimport GeneralInformationContainer from 'src/Components/GeneralInformation/GeneralInformationContainer';\r\n\r\nconst GeneralInformationPage = () => {\r\n\treturn <GeneralInformationContainer />;\r\n};\r\n\r\nexport default GeneralInformationPage;\r\n"],"names":["getInformationState","state","EnumStore","selectInformationData","createSelector","data","selectInformationIsLoading","isLoading","selectErrorInformation","error","onSubmit","useState","yandexMetricCode","yandex","setYandex","title","labelRu","setLabelRu","titleEn","labelEng","setLabelEng","videos","setVideos","videoIdsForRemoving","setVideoIdsForRemoving","isDisabledSave","length","onSave","useCallback","onAttach","index","file","id","_","videoIdsForRemovingNew","push","videosNew","url","Grid","container","spacing","item","xs","md","TextField","label","variant","multiline","tabIndex","onChange","e","target","value","rows","placeholder","className","style","FileFiledWithPreview","totalFiles","isVideoAllowed","files","ButtonWithTooltip","onClick","disabled","useStoreSelector","useActionDispatcher","informationClientToServerActions","Page","isUndefined"],"sourceRoot":""}