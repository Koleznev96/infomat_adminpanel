{"version":3,"file":"static/js/806.09b3f596.chunk.js","mappings":"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","sources":["../../../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","../../../node_modules/framer-motion/dist/es/utils/wrap.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../../../node_modules/framer-motion/dist/es/animation/animate.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../../node_modules/framer-motion/dist/es/context/ReorderContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/debug/record.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../../node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","../../../node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","../../../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../../../node_modules/framer-motion/dist/es/value/use-transform.mjs","../../../node_modules/framer-motion/dist/es/value/use-computed.mjs","../../../node_modules/framer-motion/dist/es/utils/transform.mjs","../../../node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","../../../node_modules/framer-motion/dist/es/components/Reorder/index.mjs","../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n            prevTime = currentTime;\n            currentTime += maxDuration;\n        }\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex((entry) => value === entry.value) === -1) {\n                order.push({ value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: (id, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, { ...props, ref: externalRef, ignoreStrict: true },\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n","import { moveItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useContext, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    const measuredLayout = useRef(null);\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    useEffect(() => {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React.createElement(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => {\n            measuredLayout.current = measured;\n        }, ref: externalRef, ignoreStrict: true }, children));\n}\nconst Item = forwardRef(ReorderItem);\n\nexport { Item, ReorderItem };\n","import { Group } from './Group.mjs';\nimport { Item } from './Item.mjs';\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\nexport { Reorder };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["resolveElements","elements","scope","selectorCache","_a","root","document","Boolean","current","querySelectorAll","Element","Array","from","supportsScrollTimeline","undefined","window","ScrollTimeline","GroupPlaybackControls","constructor","animations","this","filter","then","onResolve","onReject","Promise","all","catch","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","cancelAll","map","animation","pause","update","prevProgress","onFrame","currentTime","progress","value","observeTimeline","time","duration","forEach","cancelTimeline","stop","speed","max","Math","runAll","methodName","controls","play","cancel","complete","createVisualElement","element","options","presenceContext","props","visualState","renderState","transform","transformOrigin","style","vars","attrs","latestValues","node","SVGVisualElement","enableHardwareAcceleration","HTMLVisualElement","mount","createGeneratorEasing","scale","generator","spring","keyframes","min","type","ease","next","calcNextTime","prev","labels","startsWith","parseFloat","get","getEasingForSegment","easing","v","rangeSize","wrap","addKeyframes","sequence","offset","startTime","endTime","keyframe","at","eraseKeyframes","push","mix","compareByTime","a","b","getSubjectSequence","subject","sequences","has","set","getValueSequence","name","keyframesAsList","isArray","getValueTransition","transition","key","isNumber","isNumberKeyframesArray","every","animateElements","elementOrSelector","numElements","visualElement","delay","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","defaultDuration","Map","elementCache","timeLabels","prevTime","totalDuration","segment","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","valueKeyframesAsList","times","remainingTransition","calculatedDelay","numKeyframes","absoluteDelta","delta","abs","springTransition","springEasing","targetTime","remainder","fill","unshift","subjectSequence","valueSequences","sort","valueOffset","valueEasing","definition","createAnimationsFromSequence","default","animate","valueOrElementOrSequence","isDOMKeyframes","safeMin","findSpring","bounce","velocity","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","restDelta","restSpeed","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","t","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","maxGeneratorDuration","calcGeneratorDuration","Infinity","calcGeneratorVelocity","resolveValue","prevT","instantAnimationState","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","linear","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","reverse","backInOut","mirror","easingLookup","circInOut","anticipate","p","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","values","splice","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","start","now","performance","types","decay","tween","animateValue","autoplay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","hasStopped","updateFinishedPromise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","cancelTime","resolvedDuration","tick","round","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","reject","newTime","newSpeed","sample","supportsWaapi","Object","hasOwnProperty","call","prototype","acceleratedValues","Set","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","owner","syncStart","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","isNone","animateMotionValue","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","animateSingleValue","motionValue$1","optimizedAppearDataAttribute","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","transitionEnd","makeTargetAnimatable","willChange","getValue","animationTypeState","animationState","getState","valueTarget","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","is","add","remove","isAnimationControls","isKeyframesTarget","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","ReorderContext","createContext","MotionContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","MotionConfigContext","layoutId","useLayoutId","isStatic","parent","lazyContext","reducedMotionConfig","reducedMotion","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","canHandoff","render","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","transformTemplate","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","drag","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","ref","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","svgMotionConfig","dimensions","getBBox","getBoundingClientRect","y","width","height","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","addHoverEvent","isActive","callbackName","info","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","gestureAnimations","inView","super","arguments","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevProps","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","shallowCompare","prevLength","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","transformPagePoint","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","top","left","bottom","right","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measure","measuredConstraints","calcViewportConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","box","originBox","removePointDelta","boxScale","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","scroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","measurePageBox","removeElementScroll","roundAxis","measuredBox","measureViewportBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","rotateZ","resetValues","setStaticValue","getProjectionStyles","styleProp","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","clear","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","rootProjectionNode","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","motion","Group","as","onReorder","order","isReordering","registerItem","compareMin","updateOrder","newOrder","index","item","nextOffset","nextItem","nextLayout","nextItemCenter","checkReorder","ignoreStrict","useCombineMotionValues","combineValues","updateValue","scheduleUpdate","subscriptions","on","unsubscribe","useTransform","input","inputRangeOrTransformer","outputRange","compute","useComputed","transformer","useImmediate","argOffset","inputValue","inputRange","interpolator","mixer","isCustomValueType","useListTransform","numValues","useDefaultMotionValue","defaultValue","Item","zIndex","latestX","latestY","gesturePoint","onLayoutMeasure","measured","Reorder","acos","mirrorEasing","reverseEasing","isEasingArray","Queue","scheduled","process","stepsOrder","schedule","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","isProcessing","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","createRenderBatcher","requestAnimationFrame","featureProps","featureDefinitions","isEnabled","isForcedMotionValue","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","scalePoint","applyPointDelta","applyAxisDelta","applyBoxDelta","applyTreeDeltas","treePath","isSharedTransition","treeLength","display","transformBox","snapToDefault","Number","isInteger","translateAxis","transformAxis","axisOrigin","createDelta","createBox","scaleCorrectors","addScaleCorrector","correctors","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","is2DTranslate","viewportBox","splitCSSVariableRegex","getVariableValue","token","fallback","match","exec","parseCSSVariable","getPropertyValue","trimmed","trim","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","toType","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","isVariantNode","isControllingVariants","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","parsed","camelToDash","str","replace","checkStringStartsWith","isCSSVariableName","isCSSVariableToken","cssVariableRegex","isSVGElement","SVGElement","getAnimatableNone","defaultValueType","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","transformPerspective","originZ","fillOpacity","strokeOpacity","numOctaves","testValueType","defaultType","computedStyle","childSubscription","textContent","translateAlias","numTransforms","getValueAsType","buildHTMLStyles","hasTransformOrigin","transformIsNone","valueType","number","valueAsType","allowTransformNone","transformIsDefault","transformString","buildTransform","renderHTML","setProperty","newValues","transformPropOrder","transformProps","visualElementStore","isSVGTag","getAttribute","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","camelCaseAttributes","tag","renderSVG","_styleProp","setAttribute","charAt","substring","isVariantLabel","resolveVariant","getCurrent","resolveVariantFromProps","currentValues","valueTypes","setMotionValue","setTarget","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","variantPriorityOrder","variantProps","addUniqueItem","arr","removeItem","moveItem","toIndex","startIndex","endIndex","warning","invariant","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","originStats","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","isClamp","inputLength","progressInRange","isBrowser","isNumericalString","isRefObject","isZeroValueString","memo","any","defaultOffset","fillOffset","remaining","offsetProgress","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","numSubscriptions","getSize","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","useConstant","init","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","parseComplexValue","createTransformer","convertNumbersToZero","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString","useMotionValue","setLatest","useState","isWillChangeMotionValue","isMotionValue"],"sourceRoot":""}