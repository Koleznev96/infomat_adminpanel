{"version":3,"file":"static/js/544.cd6d5899.chunk.js","mappings":"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","sources":["../../core/src/Hooks/useBooleanState.ts","../../core/src/Redux/CategoryObject/Selectors/defaultSelectors.ts","../../core/src/Redux/CategoryObject/Selectors/selectCategoryObjectIsLoading.ts","../../core/src/Redux/SubcategoryObject/Selectors/defaultSelectors.ts","../../core/src/Redux/SubcategoryObject/Selectors/selectSubcategoryObjectIsLoading.ts","webpack://@infomat/web/../uikit/src/Button/ButtonDelete.module.scss?e738","../../uikit/src/Button/ButtonDelete.tsx","webpack://@infomat/web/../uikit/src/Fields/IconFiledWithPreview/IconFiledWithPreview.module.scss?87c4","../../uikit/src/Fields/IconFiledWithPreview/IconFiledWithPreview.tsx","webpack://@infomat/web/../uikit/src/Media/MediaAttachment/DropZoneOverlay/DropZoneOverlay.module.scss?6e6d","../../uikit/src/Media/MediaAttachment/DropZoneOverlay/DropZoneOverlay.tsx","../../uikit/src/Media/MediaAttachment/MediaAttachment.tsx","webpack://@infomat/web/../uikit/src/Page/Page.module.scss?95a3","../../uikit/src/Page/Page.tsx","webpack://@infomat/web/./src/Components/SelectCategoryField/SelectField.module.scss?f5cf","Components/SelectCategoryField/SelectField.tsx","Components/SelectCategoryField/SelectCategoryFieldContainer.tsx","../../core/src/Redux/SubcategoryObject/Selectors/selectSubcategoryObjectData.ts","Components/SubcategoryObject/SubcategoryObject.tsx","Components/SubcategoryObject/SubcategoryObjectContainer.tsx","Routes/Pages/Desktop/SubcategoryObjectPage/SubcategoryObjectPage.tsx","Utils/Navigation/getRouterLinkForMui.tsx","Utils/Navigation/useRouterLinkForMui.ts"],"sourcesContent":["import {useCallback, useState} from 'react';\r\n\r\nexport const useBooleanState = (defaultValue = false): [boolean, () => void, () => void, () => void] => {\r\n\tconst [state, setState] = useState(defaultValue);\r\n\tconst setTrue = useCallback(() => setState(true), []);\r\n\tconst setFalse = useCallback(() => setState(false), []);\r\n\tconst toggle = useCallback(() => setState((previous) => !previous), []);\r\n\r\n\treturn [state, setTrue, setFalse, toggle];\r\n};\r\n","import IRootState from '@infomat/core/src/Redux/IRootState';\r\nimport {TDefaultSelectors} from '@infomat/core/src/Redux/TDefaultSelectors';\r\nimport EnumStore from '@infomat/core/src/BusinessLogic/EnumStore';\r\nimport {TCategoryObjectVM, categoryObjectAdapter} from '@infomat/core/src/Redux/CategoryObject/entityAdapter';\r\n\r\nconst {selectIds, selectById, selectAll} = categoryObjectAdapter.getSelectors<IRootState>(\r\n\t(state) => state[EnumStore.CATEGORY_OBJECT],\r\n) as TDefaultSelectors<TCategoryObjectVM, number>;\r\n\r\nexport const selectCategoryObjectIds = selectIds;\r\nexport const selectCategoryObjectVMById = selectById;\r\nexport const selectCategoryObjectVMs = selectAll;\r\n","import {createSelector} from '@infomat/core/src/Utils/Redux/createSelector';\r\nimport {TCategoryObjectSlice} from '@infomat/core/src/Redux/CategoryObject/slice';\r\nimport {getCategoryObjectState} from '@infomat/core/src/Redux/CategoryObject/Selectors/getCategoryObjectState';\r\n\r\nexport const selectCategoryObjectIsLoading = createSelector(\r\n\t[getCategoryObjectState],\r\n\t(state: TCategoryObjectSlice) => state.isLoading,\r\n);\r\n","import IRootState from '@infomat/core/src/Redux/IRootState';\r\nimport {TDefaultSelectors} from '@infomat/core/src/Redux/TDefaultSelectors';\r\nimport EnumStore from '@infomat/core/src/BusinessLogic/EnumStore';\r\nimport {TSubcategoryObjectVM, subcategoryObjectAdapter} from '@infomat/core/src/Redux/SubcategoryObject/entityAdapter';\r\n\r\nconst {selectIds, selectById, selectAll} = subcategoryObjectAdapter.getSelectors<IRootState>(\r\n\t(state) => state[EnumStore.SUBCATEGORY_OBJECT],\r\n) as TDefaultSelectors<TSubcategoryObjectVM, number>;\r\n\r\nexport const selectSubcategoryObjectIds = selectIds;\r\nexport const selectSubcategoryObjectVMById = selectById;\r\nexport const selectSubcategoryObjectVMs = selectAll;\r\n","import {createSelector} from '@infomat/core/src/Utils/Redux/createSelector';\r\nimport {TSubcategoryObjectSlice} from '@infomat/core/src/Redux/SubcategoryObject/slice';\r\nimport {getSubcategoryObjectState} from '@infomat/core/src/Redux/SubcategoryObject/Selectors/getSubcategoryObjectState';\r\n\r\nexport const selectSubcategoryObjectIsLoading = createSelector(\r\n\t[getSubcategoryObjectState],\r\n\t(state: TSubcategoryObjectSlice) => state.isLoading,\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ButtonDelete_modal__78ahN\",\"title\":\"ButtonDelete_title__ZPAlh\",\"button\":\"ButtonDelete_button__hMi7d\"};","import React, {ReactNode, useCallback, MouseEvent} from 'react';\r\nimport {Modal, Box, Typography, Grid} from '@mui/material';\r\n\r\nimport {useBooleanState} from '@infomat/core/src/Hooks/useBooleanState';\r\n\r\nimport Button, {TButtonProps} from './Button';\r\nimport style from './ButtonDelete.module.scss';\r\n\r\nconst ButtonDelete = ({onClick, variant = 'outlined', children = 'Удалить', ...props}: TButtonDeleteProps) => {\r\n\tconst [isShowModal, displayModal, closeModal] = useBooleanState(false);\r\n\r\n\tconst deleteHandler = useCallback(\r\n\t\t(e: MouseEvent<HTMLButtonElement>) => {\r\n\t\t\tcloseModal();\r\n\t\t\tonClick && onClick(e);\r\n\t\t},\r\n\t\t[closeModal, onClick],\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant={variant} onClick={displayModal} type=\"submit\" {...props}>\r\n\t\t\t\t{children}\r\n\t\t\t</Button>\r\n\t\t\t<Modal open={isShowModal} onClose={closeModal}>\r\n\t\t\t\t<Box className={style.modal}>\r\n\t\t\t\t\t<Typography className={style.title}>Вы действительно хотите удалить?</Typography>\r\n\t\t\t\t\t<Grid container direction=\"row\" spacing={2}>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Button className={style.button} variant=\"outlined\" onClick={deleteHandler}>\r\n\t\t\t\t\t\t\t\tДа, удалить\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Button className={style.button} variant=\"outlined\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\tНет, я ошибся\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport type TButtonDeleteProps = TButtonProps & {\r\n\tchildren?: ReactNode;\r\n};\r\n\r\nexport default ButtonDelete;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"IconFiledWithPreview_container__pgSfT\",\"file\":\"IconFiledWithPreview_file__j0uL4\",\"isActive\":\"IconFiledWithPreview_isActive__RwWdc\",\"img\":\"IconFiledWithPreview_img__m8c7g\",\"clearIcon\":\"IconFiledWithPreview_clearIcon__jPHfh\",\"label\":\"IconFiledWithPreview_label__0-2Tf\"};","import React, {useState} from 'react';\r\nimport {Typography} from '@mui/material';\r\nimport classNames from 'classnames';\r\n\r\nimport {Icon, IconSize, IconType} from '@infomat/uikit/src/Icon';\r\nimport MediaAttachment from '@infomat/uikit/src/Media/MediaAttachment/MediaAttachment';\r\nimport PropertyHandler from '@infomat/core/src/Types/PropertyHandler';\r\n\r\nimport style from './IconFiledWithPreview.module.scss';\r\nimport {TFile, TFileLocal} from '@infomat/core/src/Types/media';\r\n\r\nconst IconFiledWithPreview = ({label, file, onAttach, error}: TIconFiledWithPreviewProps) => {\r\n\tconst [errorFile, setErrorFile] = useState<string | null>(null);\r\n\tconst resError = errorFile || error;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<MediaAttachment\r\n\t\t\t\t\tisDisabled={file.url !== null}\r\n\t\t\t\t\tonSuccess={(file) => onAttach({url: file})}\r\n\t\t\t\t\tonError={setErrorFile}\r\n\t\t\t\t\tisIconAllowed={true}\r\n\t\t\t\t\tisImageAllowed={false}\r\n\t\t\t\t\tisVideoAllowed={false}\r\n\t\t\t\t\tisAudioAllowed={false}\r\n\t\t\t\t\tsizeIcon={IconSize.medium}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({getRootProps, open, dropZoneOverlay}) => (\r\n\t\t\t\t\t\t<section {...getRootProps()}>\r\n\t\t\t\t\t\t\t<div onClick={open} className={classNames(style.file, {[style.isActive]: file.url === null})}>\r\n\t\t\t\t\t\t\t\t{dropZoneOverlay}\r\n\t\t\t\t\t\t\t\t{file.url !== null ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.img}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={file.url instanceof File ? URL.createObjectURL(file.url as File) : file.url}\r\n\t\t\t\t\t\t\t\t\t\t\talt={'Image'}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div onClick={() => onAttach({url: null})} className={style.clearIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon type={IconType.close} size={IconSize.micro} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Icon type={IconType.add} size={IconSize.medium} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</MediaAttachment>\r\n\t\t\t\t{label && <Typography className={style.label}>{label}</Typography>}\r\n\t\t\t</div>\r\n\t\t\t{resError && <Typography className={style.error}>{resError}</Typography>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ntype TIconFiledWithPreviewProps = {\r\n\tlabel?: string;\r\n\tfile: TFile | TFileLocal;\r\n\tonAttach: PropertyHandler<TFile | TFileLocal>;\r\n\terror?: string;\r\n};\r\n\r\nexport default IconFiledWithPreview;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DropZoneOverlay_container__WJfQZ\",\"entry\":\"DropZoneOverlay_entry__8vi3o\",\"active\":\"DropZoneOverlay_active__TP3C4\"};","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport {Icon, IconSize, IconType} from '@infomat/uikit/src/Icon';\r\n\r\nimport style from './DropZoneOverlay.module.scss';\r\n\r\nconst DropZoneOverlay = ({isActive, isIconHidden = false, size = IconSize.xxlarge}: IDropZoneOverlayProps) => {\r\n\treturn (\r\n\t\t<div className={classNames(style.container, {[style.active]: isActive})}>\r\n\t\t\t<div className={classNames(style.entry)}>\r\n\t\t\t\t{!isIconHidden && <Icon type={IconType.insertDriveFile} size={size} />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ninterface IDropZoneOverlayProps {\r\n\tisActive: boolean;\r\n\tisIconHidden?: boolean;\r\n\tsize?: IconSize;\r\n}\r\n\r\nexport default DropZoneOverlay;\r\n","import React, {DragEvent, ReactNode, useCallback, useMemo, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport Dropzone, {Accept, DropzoneState, FileRejection} from 'react-dropzone';\r\n\r\nimport DropZoneOverlay from '@infomat/uikit/src/Media/MediaAttachment/DropZoneOverlay/DropZoneOverlay';\r\nimport PropertyHandler from '@infomat/core/src/Types/PropertyHandler';\r\nimport {IconSize} from '@infomat/uikit/src/Icon';\r\n\r\nconst MediaAttachment = ({\r\n\tisDisabled = false,\r\n\tisIconAllowed = false,\r\n\tisImageAllowed = true,\r\n\tisAudioAllowed = true,\r\n\tisVideoAllowed = true,\r\n\tonSuccess,\r\n\tonError,\r\n\tchildren,\r\n\tcapture,\r\n\tsizeIcon,\r\n}: TMediaAttachmentProps) => {\r\n\tconst [isDropzoneOverlayVisible, setIsDropzoneOverlayVisible] = useState(false);\r\n\r\n\tconst onDrag = useCallback((event: DragEvent) => {\r\n\t\tif (event.type === 'dragenter') {\r\n\t\t\tsetIsDropzoneOverlayVisible(true);\r\n\t\t} else if (event.type === 'dragleave') {\r\n\t\t\tsetIsDropzoneOverlayVisible(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t/**\r\n\t * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\r\n\t */\r\n\tconst supportedMimeTypes = useMemo((): Accept => {\r\n\t\tconst supportedMimeTypes: Accept = {};\r\n\r\n\t\tif (isIconAllowed) {\r\n\t\t\tsupportedMimeTypes['image/png'] = ['.png'];\r\n\t\t\tsupportedMimeTypes['image/svg'] = ['.svg'];\r\n\t\t}\r\n\r\n\t\tif (isImageAllowed) {\r\n\t\t\tsupportedMimeTypes['image/bmp'] = ['.bmp'];\r\n\t\t\tsupportedMimeTypes['image/avif'] = ['.avif'];\r\n\t\t\tsupportedMimeTypes['image/jpeg'] = ['.jpeg', '.jpg'];\r\n\t\t\tsupportedMimeTypes['image/png'] = ['.png'];\r\n\t\t\tsupportedMimeTypes['image/svg'] = ['.svg'];\r\n\t\t\tsupportedMimeTypes['image/tiff'] = ['.tif', '.tiff'];\r\n\t\t\tsupportedMimeTypes['image/webp'] = ['.webp'];\r\n\t\t\tsupportedMimeTypes['image/heic'] = ['.heic'];\r\n\t\t\tsupportedMimeTypes['image/heif'] = ['.heif'];\r\n\t\t}\r\n\r\n\t\tif (isVideoAllowed) {\r\n\t\t\tsupportedMimeTypes['video/*'] = [];\r\n\t\t}\r\n\t\tif (isAudioAllowed) {\r\n\t\t\tsupportedMimeTypes['audio/*'] = [];\r\n\t\t}\r\n\r\n\t\treturn supportedMimeTypes;\r\n\t}, [isImageAllowed, isAudioAllowed, isVideoAllowed, isIconAllowed]);\r\n\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles: File[], fileRejections: FileRejection[]) => {\r\n\t\t\tif (onError && _.size(fileRejections) > 0) {\r\n\t\t\t\tconst rejectedFileNames = _.chain(fileRejections)\r\n\t\t\t\t\t.map((fileRejection) => _.get(fileRejection, 'file.name', _.get(fileRejection, 'file.path', '')))\r\n\t\t\t\t\t.join(', ')\r\n\t\t\t\t\t.value();\r\n\r\n\t\t\t\tsetIsDropzoneOverlayVisible(false);\r\n\r\n\t\t\t\tonError(`upload_failed ${rejectedFileNames}`);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (onSuccess) {\r\n\t\t\t\tsetIsDropzoneOverlayVisible(false);\r\n\r\n\t\t\t\tconst file = _.head(acceptedFiles);\r\n\r\n\t\t\t\tif (!_.isUndefined(file)) {\r\n\t\t\t\t\tonSuccess(file);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[onSuccess, onError, isImageAllowed, isVideoAllowed, isAudioAllowed, isIconAllowed],\r\n\t);\r\n\treturn (\r\n\t\t<Dropzone\r\n\t\t\tnoClick\r\n\t\t\tnoKeyboard\r\n\t\t\tdisabled={isDisabled}\r\n\t\t\tmultiple={false}\r\n\t\t\tonDragLeave={onDrag}\r\n\t\t\tonDragEnter={onDrag}\r\n\t\t\tonDrop={onDrop}\r\n\t\t\taccept={supportedMimeTypes}\r\n\t\t>\r\n\t\t\t{_.isFunction(children)\r\n\t\t\t\t? (state) =>\r\n\t\t\t\t\t\tchildren({\r\n\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\tdropZoneOverlay: <DropZoneOverlay size={sizeIcon} isActive={isDropzoneOverlayVisible} />,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t: ({getRootProps, getInputProps}) => (\r\n\t\t\t\t\t\t<label {...getRootProps()}>\r\n\t\t\t\t\t\t\t{children}\r\n\t\t\t\t\t\t\t<input {...(capture ? _.omit(getInputProps(), 'accept') : getInputProps())} capture={capture} />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t  )}\r\n\t\t</Dropzone>\r\n\t);\r\n};\r\n\r\ntype TMediaAttachmentProps = {\r\n\tisDisabled?: boolean;\r\n\tisIconAllowed?: boolean;\r\n\tisImageAllowed?: boolean;\r\n\tisVideoAllowed?: boolean;\r\n\tisAudioAllowed?: boolean;\r\n\tonSuccess?: PropertyHandler<File>;\r\n\tonError?: PropertyHandler<string>;\r\n\tsizeIcon?: IconSize;\r\n} & (\r\n\t| {\r\n\t\t\tchildren(state: DropzoneState & {dropZoneOverlay: JSX.Element}): JSX.Element;\r\n\t\t\tcapture?: undefined;\r\n\t  }\r\n\t| {\r\n\t\t\tchildren?: ReactNode;\r\n\t\t\tcapture?: 'user' | 'environment';\r\n\t  }\r\n);\r\n\r\nexport default MediaAttachment;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Page_container__hkv-G\",\"label\":\"Page_label__sBDcZ\",\"scroll\":\"Page_scroll__uUB+c\",\"boxEmpty\":\"Page_boxEmpty__dqx3r\"};","import React, {ElementType, ReactNode} from 'react';\r\nimport {Paper, Typography, CircularProgress} from '@mui/material';\r\n\r\nimport Button from '@infomat/uikit/src/Button/Button';\r\n\r\nimport style from './Page.module.scss';\r\n\r\nconst Page = ({children, label, backLink, isLoading}: TPageProps) => {\r\n\treturn (\r\n\t\t<Paper classes={{root: style.container}}>\r\n\t\t\t<div className={style.scroll}>\r\n\t\t\t\t{backLink && (\r\n\t\t\t\t\t<Button variant=\"outlined\" component={backLink}>\r\n\t\t\t\t\t\tНазад\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t\t{label && <Typography className={style.label}>{label}</Typography>}\r\n\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t<div className={style.boxEmpty}>\r\n\t\t\t\t\t\t<CircularProgress size={38} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\tchildren\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\ntype TPageProps = {\r\n\tchildren?: ReactNode;\r\n\tlabel?: string;\r\n\tbackLink?: ElementType;\r\n\tisLoading?: boolean;\r\n};\r\n\r\nexport default Page;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__vt4h0\",\"select\":\"SelectField_select__V-TG4\",\"itemLabel\":\"SelectField_itemLabel__WHaUy\",\"item\":\"SelectField_item__CH8Y1\",\"isSelect\":\"SelectField_isSelect__hSPB-\",\"placeholder\":\"SelectField_placeholder__bynQv\",\"root\":\"SelectField_root__gpgli\",\"boxLoading\":\"SelectField_boxLoading__94f26\",\"icon\":\"SelectField_icon__1yD79\"};","import React from 'react';\r\nimport {CircularProgress, Typography, Grid, MenuItem, FormControl} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\n\r\nimport {Icon, IconType} from '@infomat/uikit/src/Icon';\r\nimport PropertyHandler from '@infomat/core/src/Types/PropertyHandler';\r\nimport {TCategoryObjectVM} from '@infomat/core/src/Redux/CategoryObject/entityAdapter';\r\nimport Dashboard from '@infomat/uikit/src/Dashboard/Dashboard';\r\n\r\nimport style from './SelectField.module.scss';\r\nimport {TSubcategoryObjectVM} from '@infomat/core/src/Redux/SubcategoryObject/entityAdapter';\r\n\r\nconst SelectField = ({label, placeholder, items, value, onChange, isLoading}: TSelectField) => {\r\n\tconst filterItems = _.filter(items, (item) => item.id !== value);\r\n\tconst currentItem = _.find(items, (item) => item.id === value);\r\n\treturn (\r\n\t\t<Grid container direction=\"column\" className={style.root}>\r\n\t\t\t{label && <Typography className={style.label}>{label}</Typography>}\r\n\t\t\t<FormControl>\r\n\t\t\t\t<Dashboard\r\n\t\t\t\t\tRootComponent={\r\n\t\t\t\t\t\t<div className={style.select}>\r\n\t\t\t\t\t\t\t{value && currentItem ? (\r\n\t\t\t\t\t\t\t\t<div className={style.item}>\r\n\t\t\t\t\t\t\t\t\t{currentItem.icon && <img src={currentItem.icon.url} className={style.icon} />}\r\n\t\t\t\t\t\t\t\t\t<Typography className={style.itemLabel}>{currentItem.title}</Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Typography className={style.placeholder}>{placeholder}</Typography>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Icon className={style.iconValue} type={IconType.keyboardArrowDown} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t<div className={style.boxLoading}>\r\n\t\t\t\t\t\t\t<CircularProgress size={22} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t_.map(filterItems, (item, index) => (\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tvalue={label}\r\n\t\t\t\t\t\t\t\tonClick={() => onChange(item.id)}\r\n\t\t\t\t\t\t\t\tclasses={{root: classNames(style.item, {[style.isSelect]: item.id === value})}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{item.icon && <img src={item.icon.url} className={style.icon} />}\r\n\t\t\t\t\t\t\t\t<Typography className={style.itemLabel}>{item.title}</Typography>\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Dashboard>\r\n\t\t\t</FormControl>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\ntype TSelectField = {\r\n\titems?: (TCategoryObjectVM | TSubcategoryObjectVM)[];\r\n\tonChange: PropertyHandler<number>;\r\n\tlabel?: string;\r\n\tplaceholder?: string;\r\n\tvalue?: number;\r\n\tisLoading?: boolean;\r\n};\r\n\r\nexport default SelectField;\r\n","import React from 'react';\r\n\r\nimport {useStoreSelector} from '@infomat/core/src/Hooks/useStoreSelector';\r\nimport {selectCategoryObjectIsLoading} from '@infomat/core/src/Redux/CategoryObject/Selectors/selectCategoryObjectIsLoading';\r\nimport {selectCategoryObjectVMs} from '@infomat/core/src/Redux/CategoryObject/Selectors/defaultSelectors';\r\nimport PropertyHandler from '@infomat/core/src/Types/PropertyHandler';\r\n\r\nimport SelectField from './SelectField';\r\nimport {selectSubcategoryObjectVMs} from '@infomat/core/src/Redux/SubcategoryObject/Selectors/defaultSelectors';\r\n\r\nconst SelectCategoryFieldContainer = ({\r\n\tonChange,\r\n\tlabel,\r\n\tplaceholder,\r\n\tvalue,\r\n\tisShowSubcategory,\r\n}: TSelectCategoryFieldContainerProps) => {\r\n\tconst categoryObjectVMs = useStoreSelector(selectCategoryObjectVMs);\r\n\tconst subcategoryObjectVMs = useStoreSelector(selectSubcategoryObjectVMs);\r\n\tconst isLoading = useStoreSelector(selectCategoryObjectIsLoading);\r\n\r\n\treturn (\r\n\t\t<SelectField\r\n\t\t\titems={isShowSubcategory ? subcategoryObjectVMs : categoryObjectVMs}\r\n\t\t\tonChange={onChange}\r\n\t\t\tlabel={label}\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tvalue={value}\r\n\t\t\tisLoading={isLoading}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype TSelectCategoryFieldContainerProps = {\r\n\tonChange: PropertyHandler<number>;\r\n\tlabel?: string;\r\n\tplaceholder?: string;\r\n\tvalue?: number;\r\n\tisShowSubcategory?: boolean;\r\n};\r\n\r\nexport default SelectCategoryFieldContainer;\r\n","import {createSelector} from '@infomat/core/src/Utils/Redux/createSelector';\r\nimport {TSubcategoryObjectSlice} from '@infomat/core/src/Redux/SubcategoryObject/slice';\r\nimport {getSubcategoryObjectState} from '@infomat/core/src/Redux/SubcategoryObject/Selectors/getSubcategoryObjectState';\r\n\r\nexport const selectSubcategoryObjectData = createSelector(\r\n\t[getSubcategoryObjectState],\r\n\t(state: TSubcategoryObjectSlice) => state.data,\r\n);\r\n","import React, {useCallback, useState} from 'react';\r\nimport {Grid} from '@mui/material';\r\nimport {isUndefined} from 'lodash';\r\n\r\nimport PropertyHandler from '@infomat/core/src/Types/PropertyHandler';\r\nimport ButtonWithTooltip from '@infomat/uikit/src/Button/ButtonWithTooltip';\r\nimport ButtonDelete from '@infomat/uikit/src/Button/ButtonDelete';\r\nimport TextField from '@infomat/uikit/src/Fields/TextField/TextField';\r\nimport IconFiledWithPreview from '@infomat/uikit/src/Fields/IconFiledWithPreview/IconFiledWithPreview';\r\nimport {TSubcategoryObjectCreate, TSubcategoryObjectVM} from '@infomat/core/src/Redux/SubcategoryObject/entityAdapter';\r\nimport {TFile, TFileLocal} from '@infomat/core/src/Types/media';\r\n\r\nimport SelectCategoryFieldContainer from 'src/Components/SelectCategoryField/SelectCategoryFieldContainer';\r\n\r\nconst SubcategoryObject = ({onSubmit, onDelete, subcategoryObjectVM, id}: TSubcategoryObjectProps) => {\r\n\tconst [title, setTitle] = useState(subcategoryObjectVM?.title || '');\r\n\tconst [titleEn, setTitleEn] = useState(subcategoryObjectVM?.titleEn || '');\r\n\tconst [icon, onIcon] = useState<TFile | TFileLocal>(subcategoryObjectVM?.icon || {url: null});\r\n\tconst [categoryId, setCategoryId] = useState<number | undefined>(subcategoryObjectVM?.category.id || undefined);\r\n\r\n\tconst isDisabledSave = !title.length || !titleEn.length || icon.url === null || isUndefined(categoryId);\r\n\r\n\tconst onSave = useCallback(() => {\r\n\t\tonSubmit({id, title, titleEn, categoryId, icon});\r\n\t}, [id, title, titleEn, categoryId, icon, onSubmit]);\r\n\r\n\tconst handleChange = (id: number) => {\r\n\t\tsetCategoryId(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={3}>\r\n\t\t\t<Grid item container xs={12} md={12} gap={3}>\r\n\t\t\t\t<IconFiledWithPreview onAttach={onIcon} file={icon} label=\"Загрузить иконку 24х24\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel={'Название на русском языке*'}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\ttabIndex={1}\r\n\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\tvalue={title}\r\n\t\t\t\t\tplaceholder=\"Название на русском языке\"\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel={'Название на английском языке*'}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\ttabIndex={2}\r\n\t\t\t\t\tonChange={(e) => setTitleEn(e.target.value)}\r\n\t\t\t\t\tvalue={titleEn}\r\n\t\t\t\t\tplaceholder=\"Название на английском языке\"\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item container xs={12} md={6}>\r\n\t\t\t\t<SelectCategoryFieldContainer\r\n\t\t\t\t\tvalue={categoryId}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel=\"Родительская категория*\"\r\n\t\t\t\t\tplaceholder=\"Категории объектов\"\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item container gap={1.5}>\r\n\t\t\t\t<ButtonWithTooltip onClick={onSave} disabled={isDisabledSave} tabIndex={3}>\r\n\t\t\t\t\tСохранить\r\n\t\t\t\t</ButtonWithTooltip>\r\n\t\t\t\t{!isUndefined(id) && (\r\n\t\t\t\t\t<ButtonDelete onClick={onSave} tabIndex={4}>\r\n\t\t\t\t\t\tУдалить подкатегорию объектов\r\n\t\t\t\t\t</ButtonDelete>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\ntype TSubcategoryObjectProps = {\r\n\tonSubmit: PropertyHandler<TSubcategoryObjectCreate>;\r\n\tonDelete: PropertyHandler<{id: number}>;\r\n\tsubcategoryObjectVM?: TSubcategoryObjectVM;\r\n\tid?: number;\r\n};\r\n\r\nexport default SubcategoryObject;\r\n","import React from 'react';\r\nimport {isUndefined} from 'lodash';\r\n\r\nimport {selectSubcategoryObjectData} from '@infomat/core/src/Redux/SubcategoryObject/Selectors/selectSubcategoryObjectData';\r\nimport {selectSubcategoryObjectIsLoading} from '@infomat/core/src/Redux/SubcategoryObject/Selectors/selectSubcategoryObjectIsLoading';\r\nimport {subcategoryObjectClientToServerActions} from '@infomat/core/src/Redux/SubcategoryObject/Actions/subcategoryObjectClientToServerActions';\r\nimport useActionDispatcher from '@infomat/core/src/Hooks/useActionDispatcher';\r\nimport {useStoreSelector} from '@infomat/core/src/Hooks/useStoreSelector';\r\nimport Page from '@infomat/uikit/src/Page/Page';\r\n\r\nimport useRouterLinkForMui from 'src/Utils/Navigation/useRouterLinkForMui';\r\nimport {Routes} from 'src/Routes/Routes';\r\n\r\nimport SubcategoryObject from './SubcategoryObject';\r\n\r\nconst SubcategoryObjectContainer = ({id}: TSubcategoryObjectContainerProps) => {\r\n\tconst subcategoryObjectVM = isUndefined(id) ? undefined : useStoreSelector(selectSubcategoryObjectData);\r\n\tconst isLoading = useStoreSelector(selectSubcategoryObjectIsLoading);\r\n\tconst onDelete = useActionDispatcher(subcategoryObjectClientToServerActions.deleteCategory);\r\n\tconst onUpdate = useActionDispatcher(subcategoryObjectClientToServerActions.updateCategory);\r\n\tconst onCreate = useActionDispatcher(subcategoryObjectClientToServerActions.createCategory);\r\n\tconst SubategoriesObjectsLink = useRouterLinkForMui(Routes.subcategoriesObjects);\r\n\r\n\treturn (\r\n\t\t<Page\r\n\t\t\tisLoading={isLoading || (isUndefined(subcategoryObjectVM) && !isUndefined(id))}\r\n\t\t\tbackLink={SubategoriesObjectsLink}\r\n\t\t\tlabel={isUndefined(id) ? 'Создание категории объектов' : 'Редактирование категории объектов'}\r\n\t\t>\r\n\t\t\t<SubcategoryObject\r\n\t\t\t\tid={id}\r\n\t\t\t\tsubcategoryObjectVM={subcategoryObjectVM}\r\n\t\t\t\tonSubmit={isUndefined(id) ? onCreate : onUpdate}\r\n\t\t\t\tonDelete={onDelete}\r\n\t\t\t/>\r\n\t\t</Page>\r\n\t);\r\n};\r\n\r\ntype TSubcategoryObjectContainerProps = {\r\n\tid?: number;\r\n};\r\n\r\nexport default SubcategoryObjectContainer;\r\n","import React from 'react';\r\nimport {useParams} from 'react-router';\r\n\r\nimport SubcategoryObjectContainer from 'src/Components/SubcategoryObject/SubcategoryObjectContainer';\r\n\r\nconst SubcategoryObjectPage = () => {\r\n\tconst {id} = useParams() as {id: string};\r\n\r\n\treturn <SubcategoryObjectContainer id={id === 'new' ? undefined : Number(id)} />;\r\n};\r\n\r\nexport default SubcategoryObjectPage;\r\n","import React, {forwardRef} from 'react';\r\nimport {Link, LinkProps} from 'react-router-dom';\r\n\r\nimport {Routes} from 'src/Routes/Routes';\r\n\r\nconst getRouterLinkForMui = (linkProps: LinkProps) => {\r\n\treturn forwardRef<HTMLAnchorElement, Partial<LinkProps>>((props, ref) => (\r\n\t\t<Link {...props} {...linkProps} role={undefined} ref={ref} relative={undefined} />\r\n\t));\r\n};\r\n\r\nexport default getRouterLinkForMui;\r\n","import {LinkProps} from 'react-router-dom';\r\nimport {useMemo} from 'react';\r\n\r\nimport getRouterLinkForMui from 'src/Utils/Navigation/getRouterLinkForMui';\r\n\r\nconst useRouterLinkForMui = (\r\n\tto: LinkProps['to'],\r\n\treplace: LinkProps['replace'] = false,\r\n\tonClick?: LinkProps['onClick'],\r\n\tstate?: LinkProps['state'],\r\n) => useMemo(() => getRouterLinkForMui({to, replace, onClick, state}), [to, replace, onClick, state]);\r\n\r\nexport default useRouterLinkForMui;\r\n"],"names":["useBooleanState","defaultValue","useState","state","setState","setTrue","useCallback","setFalse","toggle","previous","categoryObjectAdapter","EnumStore","selectIds","selectById","selectAll","selectCategoryObjectIds","selectCategoryObjectVMById","selectCategoryObjectVMs","selectCategoryObjectIsLoading","createSelector","getCategoryObjectState","isLoading","subcategoryObjectAdapter","selectSubcategoryObjectIds","selectSubcategoryObjectVMById","selectSubcategoryObjectVMs","selectSubcategoryObjectIsLoading","getSubcategoryObjectState","onClick","variant","children","props","isShowModal","displayModal","closeModal","deleteHandler","e","Button","type","Modal","open","onClose","Box","className","style","Typography","Grid","container","direction","spacing","item","xs","label","file","onAttach","error","errorFile","setErrorFile","resError","MediaAttachment","isDisabled","url","onSuccess","onError","isIconAllowed","isImageAllowed","isVideoAllowed","isAudioAllowed","sizeIcon","IconSize","getRootProps","dropZoneOverlay","classNames","src","File","URL","createObjectURL","alt","Icon","IconType","size","isActive","isIconHidden","capture","isDropzoneOverlayVisible","setIsDropzoneOverlayVisible","onDrag","event","supportedMimeTypes","useMemo","onDrop","acceptedFiles","fileRejections","_","rejectedFileNames","map","fileRejection","join","value","noClick","noKeyboard","disabled","multiple","onDragLeave","onDragEnter","accept","getInputProps","backLink","Paper","classes","root","component","CircularProgress","placeholder","items","onChange","filterItems","id","currentItem","FormControl","Dashboard","RootComponent","icon","title","index","MenuItem","key","isShowSubcategory","categoryObjectVMs","useStoreSelector","subcategoryObjectVMs","selectSubcategoryObjectData","data","onSubmit","subcategoryObjectVM","onDelete","setTitle","titleEn","setTitleEn","onIcon","category","undefined","categoryId","setCategoryId","isDisabledSave","length","isUndefined","onSave","md","gap","IconFiledWithPreview","TextField","tabIndex","target","SelectCategoryFieldContainer","ButtonWithTooltip","ButtonDelete","useActionDispatcher","subcategoryObjectClientToServerActions","onUpdate","onCreate","SubategoriesObjectsLink","useRouterLinkForMui","Routes","Page","useParams","Number","linkProps","forwardRef","ref","role","relative","to","replace","getRouterLinkForMui"],"sourceRoot":""}